package com.lk.td.pay.activity;

import android.content.Intent;
import android.os.Bundle;
import android.view.View;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.TextView;

import com.google.gson.Gson;
import com.landicorp.robert.comm.util.StringUtil;
import com.lk.td.pay.activity.scan.BankScanCamera;
import com.lk.td.pay.beans.BasicResponse;
import com.lk.td.pay.beans.CashInBean;
import com.lk.td.pay.beans.PosData;
import com.lk.td.pay.beans.TradeBean;
import com.lk.td.pay.golbal.Urls;
import com.lk.td.pay.tool.Logger;
import com.lk.td.pay.tool.MyHttpClient;
import com.lk.td.pay.utils.StringUtils;
import com.lk.td.pay.utils.Utils;
import com.lk.td.pay.wedget.CommonTitleBar;
import com.loopj.android.http.AsyncHttpResponseHandler;
import com.nostra13.universalimageloader.core.ImageLoader;
import com.td.app.pay.hx.R;

import org.apache.http.Header;
import org.json.JSONException;

import java.util.HashMap;

public class SalesSlipActivity extends BaseActivity {

    private ImageView signImage,iv_path;
    private int height, width;
    private TradeBean detail;
    private TextView merchantNameText, merchantNoText, ordIdText, termIdText,
            cardNoText, ordDateText, ordAmtText;
    private String userAccount, userName;

    private RelativeLayout rl_trade_details_title;
    private LinearLayout rl_trade_details;
    private CommonTitleBar titlebar_sales;
    private String recordType;


    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.tradesales_slip);
        detail = (TradeBean) getIntent().getSerializableExtra("data");
        recordType = getIntent().getStringExtra("recordType");
        init();
        loadData();
    }

    private void loadData() {
        HashMap<String, String> params = new HashMap<String, String>();
        params.put("busType", detail.getBusType());
        params.put("ordno", detail.getPrdNo());
        MyHttpClient.post(this, "TR0002.json", params,
                new AsyncHttpResponseHandler() {

                    @Override
                    public void onSuccess(int statusCode, Header[] headers,
                                          byte[] responseBody) {
                        Logger.json("[CashinDetails]", responseBody);
                        if (responseBody != null) {
                            try {
                                BasicResponse r = new BasicResponse(
                                        responseBody).getResult();
                                if (r.isSuccess()) {
                                    CashInBean bean = new Gson().fromJson(r
                                                    .getJsonBody().toString(),
                                            CashInBean.class);
                                    //1:成功
                                    if (bean.getOrdstatus().equals("01")){
                                        rl_trade_details.setVisibility(View.GONE);
                                        rl_trade_details_title.setVisibility(View.GONE);
                                        iv_path.setVisibility(View.VISIBLE);
                                    } else {
                                        rl_trade_details.setVisibility(View.VISIBLE);
                                        rl_trade_details_title.setVisibility(View.VISIBLE);
                                        iv_path.setVisibility(View.GONE);
                                    }
                                    ordIdText.setText(detail.getPrdNo() + "");
                                    merchantNoText.setText(bean.getCustId() + "");
                                    termIdText.setText(bean.getTermNo() + "");
                                    cardNoText.setText(Utils.hiddenCardNo(bean.getPayCardNo()));
                                    merchantNameText.setText(bean.getCustName() + "");
                                    ImageLoader.getInstance().displayImage(Urls.ROOT_URL + bean.getFjpath(), iv_path, options);
                                } else {
                                    showDialog(r.getMsg());
                                }
                            } catch (JSONException e) {
                                e.printStackTrace();
                            }
                        }
                    }

                    @Override
                    public void onFailure(int statusCode, Header[] headers,
                                          byte[] responseBody, Throwable error) {
                        networkError(statusCode, error);
                    }

                    @Override
                    public void onStart() {
                        super.onStart();
                        showLoadingDialog("查询中...");
                    }

                    @Override
                    public void onFinish() {
                        super.onFinish();
                        dismissLoadingDialog();
                        titlebar_sales.getTv_more().setVisibility(View.VISIBLE);
                    }
                });

    }

    private void init() {

        merchantNameText = (TextView) findViewById(R.id.slip_merchant_name);
        merchantNoText = (TextView) findViewById(R.id.slip_merchant_no);
        ordIdText = (TextView) findViewById(R.id.slip_ord_id);
        termIdText = (TextView) findViewById(R.id.slip_term_no);
        cardNoText = (TextView) findViewById(R.id.slip_card_no);
        ordDateText = (TextView) findViewById(R.id.slip_ord_date);
        ordAmtText = (TextView) findViewById(R.id.slip_ord_amt);
//		merchantNameText.setText(User.uName);
//		merchantNoText.setText(User.uAccount);
        ordIdText.setText(tos(detail.getId()));
        termIdText.setText(tos(detail.getTerNo()));
        cardNoText.setText(Utils.hiddenCardNo(detail.getBankCardNo()));
        ordDateText.setText(detail.getTarnTime());
        ordAmtText.setText(tos(detail.getTranAmt()) + "元");
        signImage = (ImageView) findViewById(R.id.sales_slip_image);
        iv_path = (ImageView) findViewById(R.id.iv_path);
        rl_trade_details_title = (RelativeLayout) findViewById(R.id.rl_trade_details_title);
        rl_trade_details= (LinearLayout) findViewById(R.id.rl_trade_details);

        titlebar_sales =  ((CommonTitleBar) findViewById(R.id.titlebar_sales));
        titlebar_sales.setCanClickDestory(this, true);
        if (!recordType.isEmpty()) {
            if (recordType.length() != 0) {
                if (recordType.equals("2")) {
                    titlebar_sales.getTv_more().setText("拍照");

                    titlebar_sales.getTv_more().setOnClickListener(new View.OnClickListener() {
                        @Override
                        public void onClick(View v) {
                            PosData.getPosData().setPrdordNo(detail.getPrdNo());
                            startActivity(new Intent(context, BankScanCamera.class).putExtra("TYPE", "2"));
                        }
                    });
                }
            }
        }
    }

    private String tos(String str) {
        if (null == str)
            return "";
        return str;
    }
}
